@model eLogin.Models.IdentificationChannel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>IdentificationChannel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-valIdation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <  <label asp-for="Channel" class="control-label">
                    @Html.DisplayNameFor(m => m.Channel)
                    <input asp-for="Channel" class="form-control" />
                </label>
                <span asp-valIdation-for="Channel" class="text-danger"></span>
            </div>
           
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsEnabled" /> @Html.DisplayNameFor(model => model.IsEnabled)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="DefaultIdentifierEntityId" class="control-label">
                    @Html.DisplayNameFor(m => m.DefaultIdentifierEntityId)
                    <input class="form-control" hidden />

                    <ejs-dropdownlist id="DefaultIdentifierEntityId" showClearButton="true" dataSource="@ViewBag.Entities" placeholder="Select an Entity" value="@Model.DefaultIdentifierEntityId" change="entityChange">
                        <e-dropdownlist-fields text="Text" value="Value"></e-dropdownlist-fields>
                    </ejs-dropdownlist>

                </label>
                <span asp-valIdation-for="DefaultIdentifierEntityId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DefaultIdentifierPropertyId" class="control-label">
                    @Html.DisplayNameFor(m => m.DefaultIdentifierPropertyId)
                    <input class="form-control" hidden />

                    <ejs-dropdownlist id="DefaultIdentifierPropertyId" showClearButton="true" dataSource="@ViewBag.Properties" placeholder="Select a Property" value="@Model.DefaultIdentifierPropertyId" enabled="false">
                        <e-dropdownlist-fields text="PropertyName" value="PropertyId"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                </label>
                <span asp-valIdation-for="DefaultIdentifierPropertyId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PasswordValidityDays" class="control-label">
                    @Html.DisplayNameFor(m => m.PasswordValidityDays)
                    <input asp-for="PasswordValidityDays" class="form-control" />


                </label>
                <span asp-valIdation-for="PasswordValidityDays" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PasswordValidationRegex" class="control-label">
                    @Html.DisplayNameFor(m => m.PasswordValidationRegex)
                    <input asp-for="PasswordValidationRegex" class="form-control" />


                </label>
                <span asp-valIdation-for="PasswordValidationRegex" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PasswordValidationHint" class="control-label">
                    @Html.DisplayNameFor(m => m.PasswordValidationHint)
                    <input asp-for="PasswordValidationHint" class="form-control" />


                </label>
                <span asp-valIdation-for="PasswordValidationHint" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    function entityChange() {
        // disable the state DropDownList
        var entities = document.getElementById('DefaultIdentifierEntityId').ej2_instances[0];
        var properties = document.getElementById('DefaultIdentifierPropertyId').ej2_instances[0];
        properties.enabled = true;
        //frame the query based on selected value in entities DropDownList.
        var tempQuery = new ej.data.Query().where('EntityId', 'equal', entities.value);
        // set the framed query based on selected value in entities DropDownList.
        properties.query = tempQuery;
        // set null value to properties DropDownList text property
        properties.text = null;
        //  bind the property changes to properties DropDownList
        properties.dataBind();
    }
</script>
